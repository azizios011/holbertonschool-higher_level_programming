The ``3-say_my_name`` module
======================

Using ``say_my_name``
-------------------


>>> say_my_name = __import__('3-say_my_name').say_my_name

**Basic input with 2 strings**
>>> say_my_name("John", "Smith")
My name is John Smith

**Passing only first name**
>>> say_my_name("John")
My name is John 

**Passing empty string as first name**
>>> say_my_name("", "Smith")
My name is  Smith

**No arg input**
>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'

**Passing None as arg**
>>> say_my_name(None)
Traceback (most recent call last):
...
TypeError: first_name must be a string

**Passing int as arg(for last name)**
>>> say_my_name('john', 5)
Traceback (most recent call last):
...
TypeError: last_name must be a string

**Passing int as arg(for first name)**
>>> say_my_name(5, '5')
Traceback (most recent call last):
...
TypeError: first_name must be a string

**Passing boolean as argument**
>>> say_my_name(True, "Smith")
Traceback (most recent call last):
...
TypeError: first_name must be a string

**Passing boolean as argument**
>>> say_my_name("John", False)
Traceback (most recent call last):
...
TypeError: last_name must be a string

**Passing list as argument**
>>> say_my_name(["John"], "Smith")
Traceback (most recent call last):
...
TypeError: first_name must be a string

**Passing list as argument**
>>> say_my_name("John", ["Smith"])
Traceback (most recent call last):
...
TypeError: last_name must be a string
